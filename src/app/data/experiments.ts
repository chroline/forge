import { type Experiment } from "@/lib/types";

// Sample experiment data for system prompt optimization platform (classification focus)
export const experiments: Experiment[] = [
  {
    id: "exp-001",
    name: "Customer Support Classification A/B Test",
    description:
      "Testing different system prompts for customer support ticket classification accuracy",
    status: "running",
    createdAt: "2024-01-15",
    updatedAt: "2024-01-20",
    metrics: {
      accuracy: 0.87,
      loss: 0.13,
      epochs: 50,
      classificationMetrics: {
        accuracy: 0.87,
        precision: 0.89,
        recall: 0.85,
        f1Score: 0.87,
        specificity: 0.91,
        sensitivity: 0.85,
        auc: 0.92,
        confusionMatrix: {
          truePositives: 425,
          trueNegatives: 445,
          falsePositives: 55,
          falseNegatives: 75,
        },
      },
      metricsOverTime: [
        {
          timestamp: "2024-01-15T10:00:00Z",
          iteration: 1,
          metrics: {
            accuracy: 0.72,
            precision: 0.75,
            recall: 0.68,
            f1Score: 0.71,
            specificity: 0.76,
            sensitivity: 0.68,
            auc: 0.78,
            confusionMatrix: {
              truePositives: 340,
              trueNegatives: 360,
              falsePositives: 120,
              falseNegatives: 160,
            },
          },
        },
        {
          timestamp: "2024-01-16T14:30:00Z",
          iteration: 2,
          metrics: {
            accuracy: 0.79,
            precision: 0.82,
            recall: 0.76,
            f1Score: 0.79,
            specificity: 0.82,
            sensitivity: 0.76,
            auc: 0.85,
            confusionMatrix: {
              truePositives: 380,
              trueNegatives: 400,
              falsePositives: 80,
              falseNegatives: 120,
            },
          },
        },
        {
          timestamp: "2024-01-17T09:15:00Z",
          iteration: 3,
          metrics: {
            accuracy: 0.83,
            precision: 0.85,
            recall: 0.81,
            f1Score: 0.83,
            specificity: 0.85,
            sensitivity: 0.81,
            auc: 0.88,
            confusionMatrix: {
              truePositives: 405,
              trueNegatives: 415,
              falsePositives: 65,
              falseNegatives: 95,
            },
          },
        },
        {
          timestamp: "2024-01-18T16:45:00Z",
          iteration: 4,
          metrics: {
            accuracy: 0.85,
            precision: 0.87,
            recall: 0.83,
            f1Score: 0.85,
            specificity: 0.87,
            sensitivity: 0.83,
            auc: 0.9,
            confusionMatrix: {
              truePositives: 415,
              trueNegatives: 425,
              falsePositives: 55,
              falseNegatives: 85,
            },
          },
        },
        {
          timestamp: "2024-01-19T11:20:00Z",
          iteration: 5,
          metrics: {
            accuracy: 0.87,
            precision: 0.89,
            recall: 0.85,
            f1Score: 0.87,
            specificity: 0.91,
            sensitivity: 0.85,
            auc: 0.92,
            confusionMatrix: {
              truePositives: 425,
              trueNegatives: 445,
              falsePositives: 55,
              falseNegatives: 75,
            },
          },
        },
      ],
      promptIterations: [
        {
          id: "iter-001-1",
          iteration: 1,
          prompt:
            "You are a customer support classifier. Classify the following ticket into one of these categories: billing, technical, account, general. Respond with only the category name.",
          timestamp: "2024-01-15T10:00:00Z",
          metrics: {
            accuracy: 0.72,
            precision: 0.75,
            recall: 0.68,
            f1Score: 0.71,
            specificity: 0.76,
            sensitivity: 0.68,
            auc: 0.78,
            confusionMatrix: {
              truePositives: 340,
              trueNegatives: 360,
              falsePositives: 120,
              falseNegatives: 160,
            },
          },
          status: "success",
          tokensUsed: 1250,
          latency: 1200,
        },
        {
          id: "iter-001-2",
          iteration: 2,
          prompt:
            "You are an expert customer support classifier. Analyze the following support ticket and classify it into the most appropriate category: billing, technical, account, general. Consider the context and urgency of the issue. Respond with only the category name.",
          timestamp: "2024-01-16T14:30:00Z",
          metrics: {
            accuracy: 0.79,
            precision: 0.82,
            recall: 0.76,
            f1Score: 0.79,
            specificity: 0.82,
            sensitivity: 0.76,
            auc: 0.85,
            confusionMatrix: {
              truePositives: 380,
              trueNegatives: 400,
              falsePositives: 80,
              falseNegatives: 120,
            },
          },
          status: "success",
          tokensUsed: 1450,
          latency: 1350,
        },
        {
          id: "iter-001-3",
          iteration: 3,
          prompt:
            "You are a customer support classification expert. Your task is to categorize support tickets into: billing, technical, account, general. Consider the following factors: ticket content, user history, and issue complexity. Provide only the category name as your response.",
          timestamp: "2024-01-17T09:15:00Z",
          metrics: {
            accuracy: 0.83,
            precision: 0.85,
            recall: 0.81,
            f1Score: 0.83,
            specificity: 0.85,
            sensitivity: 0.81,
            auc: 0.88,
            confusionMatrix: {
              truePositives: 405,
              trueNegatives: 415,
              falsePositives: 65,
              falseNegatives: 95,
            },
          },
          status: "success",
          tokensUsed: 1650,
          latency: 1500,
        },
        {
          id: "iter-001-4",
          iteration: 4,
          prompt:
            "You are an advanced customer support classifier. Classify the following ticket into: billing, technical, account, general. Use these guidelines: billing = payment issues, technical = software/hardware problems, account = login/access issues, general = other inquiries. Respond with category only.",
          timestamp: "2024-01-18T16:45:00Z",
          metrics: {
            accuracy: 0.85,
            precision: 0.87,
            recall: 0.83,
            f1Score: 0.85,
            specificity: 0.87,
            sensitivity: 0.83,
            auc: 0.9,
            confusionMatrix: {
              truePositives: 415,
              trueNegatives: 425,
              falsePositives: 55,
              falseNegatives: 85,
            },
          },
          status: "success",
          tokensUsed: 1850,
          latency: 1650,
        },
        {
          id: "iter-001-5",
          iteration: 5,
          prompt:
            "You are a customer support classification specialist. Categorize this ticket into: billing, technical, account, general. Guidelines: billing (payments, invoices, charges), technical (bugs, errors, performance), account (access, settings, security), general (questions, feedback, other). Return category name only.",
          timestamp: "2024-01-19T11:20:00Z",
          metrics: {
            accuracy: 0.87,
            precision: 0.89,
            recall: 0.85,
            f1Score: 0.87,
            specificity: 0.91,
            sensitivity: 0.85,
            auc: 0.92,
            confusionMatrix: {
              truePositives: 425,
              trueNegatives: 445,
              falsePositives: 55,
              falseNegatives: 75,
            },
          },
          status: "success",
          tokensUsed: 2050,
          latency: 1800,
        },
      ],
    },
    dataset: "Customer Support Ticket Classification",
    model: "GPT-4",
    framework: "OpenAI API",
  },
  {
    id: "exp-002",
    name: "Email Intent Classification Optimization",
    description:
      "Optimizing system prompts for email intent classification with different prompting strategies",
    status: "completed",
    createdAt: "2024-01-10",
    updatedAt: "2024-01-18",
    metrics: {
      accuracy: 0.92,
      loss: 0.08,
      epochs: 25,
      classificationMetrics: {
        accuracy: 0.92,
        precision: 0.94,
        recall: 0.9,
        f1Score: 0.92,
        specificity: 0.94,
        sensitivity: 0.9,
        auc: 0.95,
        confusionMatrix: {
          truePositives: 450,
          trueNegatives: 470,
          falsePositives: 30,
          falseNegatives: 50,
        },
      },
      metricsOverTime: [
        {
          timestamp: "2024-01-10T09:00:00Z",
          iteration: 1,
          metrics: {
            accuracy: 0.85,
            precision: 0.87,
            recall: 0.83,
            f1Score: 0.85,
            specificity: 0.87,
            sensitivity: 0.83,
            auc: 0.88,
            confusionMatrix: {
              truePositives: 415,
              trueNegatives: 435,
              falsePositives: 65,
              falseNegatives: 85,
            },
          },
        },
        {
          timestamp: "2024-01-12T14:00:00Z",
          iteration: 2,
          metrics: {
            accuracy: 0.89,
            precision: 0.91,
            recall: 0.87,
            f1Score: 0.89,
            specificity: 0.91,
            sensitivity: 0.87,
            auc: 0.92,
            confusionMatrix: {
              truePositives: 435,
              trueNegatives: 455,
              falsePositives: 45,
              falseNegatives: 65,
            },
          },
        },
        {
          timestamp: "2024-01-15T11:30:00Z",
          iteration: 3,
          metrics: {
            accuracy: 0.92,
            precision: 0.94,
            recall: 0.9,
            f1Score: 0.92,
            specificity: 0.94,
            sensitivity: 0.9,
            auc: 0.95,
            confusionMatrix: {
              truePositives: 450,
              trueNegatives: 470,
              falsePositives: 30,
              falseNegatives: 50,
            },
          },
        },
      ],
      promptIterations: [
        {
          id: "iter-002-1",
          iteration: 1,
          prompt:
            "Classify the intent of this email into: inquiry, complaint, request, feedback, other. Respond with only the intent category.",
          timestamp: "2024-01-10T09:00:00Z",
          metrics: {
            accuracy: 0.85,
            precision: 0.87,
            recall: 0.83,
            f1Score: 0.85,
            specificity: 0.87,
            sensitivity: 0.83,
            auc: 0.88,
            confusionMatrix: {
              truePositives: 415,
              trueNegatives: 435,
              falsePositives: 65,
              falseNegatives: 85,
            },
          },
          status: "success",
          tokensUsed: 1100,
          latency: 950,
        },
        {
          id: "iter-002-2",
          iteration: 2,
          prompt:
            "You are an email intent classifier. Analyze the following email and categorize its intent as: inquiry (seeking information), complaint (expressing dissatisfaction), request (asking for action), feedback (sharing opinion), other. Consider tone, content, and context. Respond with intent only.",
          timestamp: "2024-01-12T14:00:00Z",
          metrics: {
            accuracy: 0.89,
            precision: 0.91,
            recall: 0.87,
            f1Score: 0.89,
            specificity: 0.91,
            sensitivity: 0.87,
            auc: 0.92,
            confusionMatrix: {
              truePositives: 435,
              trueNegatives: 455,
              falsePositives: 45,
              falseNegatives: 65,
            },
          },
          status: "success",
          tokensUsed: 1300,
          latency: 1150,
        },
        {
          id: "iter-002-3",
          iteration: 3,
          prompt:
            "You are an expert email intent classifier. Categorize this email's intent: inquiry (information seeking), complaint (dissatisfaction), request (action needed), feedback (opinion sharing), other. Analyze: subject line, body content, tone, urgency indicators, and sender context. Return intent category only.",
          timestamp: "2024-01-15T11:30:00Z",
          metrics: {
            accuracy: 0.92,
            precision: 0.94,
            recall: 0.9,
            f1Score: 0.92,
            specificity: 0.94,
            sensitivity: 0.9,
            auc: 0.95,
            confusionMatrix: {
              truePositives: 450,
              trueNegatives: 470,
              falsePositives: 30,
              falseNegatives: 50,
            },
          },
          status: "success",
          tokensUsed: 1500,
          latency: 1300,
        },
      ],
    },
    dataset: "Email Intent Classification",
    model: "Claude-3",
    framework: "Anthropic API",
  },
  {
    id: "exp-003",
    name: "Sentiment Analysis Prompt Testing",
    description:
      "Evaluating different system prompts for product review sentiment classification",
    status: "failed",
    createdAt: "2024-01-12",
    updatedAt: "2024-01-16",
    metrics: {
      accuracy: 0.73,
      loss: 0.27,
      epochs: 30,
      classificationMetrics: {
        accuracy: 0.73,
        precision: 0.71,
        recall: 0.75,
        f1Score: 0.73,
        specificity: 0.71,
        sensitivity: 0.75,
        auc: 0.76,
        confusionMatrix: {
          truePositives: 365,
          trueNegatives: 365,
          falsePositives: 135,
          falseNegatives: 135,
        },
      },
    },
    dataset: "Product Review Sentiment",
    model: "GPT-4",
    framework: "OpenAI API",
  },
  {
    id: "exp-004",
    name: "Document Classification Prompt Engineering",
    description:
      "Systematic evaluation of system prompts for document type classification",
    status: "pending",
    createdAt: "2024-01-22",
    updatedAt: "2024-01-22",
    metrics: null,
    dataset: "Document Type Classification",
    model: "Claude-3",
    framework: "Anthropic API",
  },
  {
    id: "exp-005",
    name: "Fraud Detection Classification",
    description:
      "Testing system prompts for financial transaction fraud classification accuracy",
    status: "running",
    createdAt: "2024-01-18",
    updatedAt: "2024-01-21",
    metrics: {
      accuracy: 0.89,
      loss: 0.11,
      epochs: 40,
      classificationMetrics: {
        accuracy: 0.89,
        precision: 0.91,
        recall: 0.87,
        f1Score: 0.89,
        specificity: 0.91,
        sensitivity: 0.87,
        auc: 0.93,
        confusionMatrix: {
          truePositives: 435,
          trueNegatives: 455,
          falsePositives: 45,
          falseNegatives: 65,
        },
      },
    },
    dataset: "Fraud Detection Transactions",
    model: "GPT-4",
    framework: "OpenAI API",
  },
  {
    id: "exp-006",
    name: "Content Moderation Classification",
    description:
      "A/B testing system prompts for content moderation classification accuracy",
    status: "completed",
    createdAt: "2024-01-05",
    updatedAt: "2024-01-14",
    metrics: {
      accuracy: 0.85,
      loss: 0.15,
      epochs: 35,
      classificationMetrics: {
        accuracy: 0.85,
        precision: 0.87,
        recall: 0.83,
        f1Score: 0.85,
        specificity: 0.87,
        sensitivity: 0.83,
        auc: 0.88,
        confusionMatrix: {
          truePositives: 415,
          trueNegatives: 435,
          falsePositives: 65,
          falseNegatives: 85,
        },
      },
    },
    dataset: "Content Moderation Dataset",
    model: "Claude-3",
    framework: "Anthropic API",
  },
  {
    id: "exp-007",
    name: "Multi-Label Classification Optimization",
    description: "Testing system prompts for multi-label classification tasks",
    status: "running",
    createdAt: "2024-01-20",
    updatedAt: "2024-01-23",
    metrics: {
      accuracy: 0.78,
      loss: 0.22,
      epochs: 45,
      classificationMetrics: {
        accuracy: 0.78,
        precision: 0.8,
        recall: 0.76,
        f1Score: 0.78,
        specificity: 0.8,
        sensitivity: 0.76,
        auc: 0.82,
        confusionMatrix: {
          truePositives: 380,
          trueNegatives: 400,
          falsePositives: 100,
          falseNegatives: 120,
        },
      },
    },
    dataset: "Performance Benchmark Dataset",
    model: "GPT-4",
    framework: "OpenAI API",
  },
  {
    id: "exp-008",
    name: "Classification Template Effectiveness",
    description:
      "Evaluating the effectiveness of different classification prompt templates",
    status: "completed",
    createdAt: "2024-01-08",
    updatedAt: "2024-01-17",
    metrics: {
      accuracy: 0.91,
      loss: 0.09,
      epochs: 60,
      classificationMetrics: {
        accuracy: 0.91,
        precision: 0.93,
        recall: 0.89,
        f1Score: 0.91,
        specificity: 0.93,
        sensitivity: 0.89,
        auc: 0.94,
        confusionMatrix: {
          truePositives: 445,
          trueNegatives: 465,
          falsePositives: 35,
          falseNegatives: 55,
        },
      },
    },
    dataset: "System Prompt Templates",
    model: "GPT-4",
    framework: "OpenAI API",
  },
  {
    id: "exp-009",
    name: "Few-Shot Classification Testing",
    description:
      "Testing few-shot examples in system prompts for classification accuracy",
    status: "running",
    createdAt: "2024-01-19",
    updatedAt: "2024-01-24",
    metrics: {
      accuracy: 0.83,
      loss: 0.17,
      epochs: 55,
      classificationMetrics: {
        accuracy: 0.83,
        precision: 0.85,
        recall: 0.81,
        f1Score: 0.83,
        specificity: 0.85,
        sensitivity: 0.81,
        auc: 0.86,
        confusionMatrix: {
          truePositives: 405,
          trueNegatives: 425,
          falsePositives: 75,
          falseNegatives: 95,
        },
      },
    },
    dataset: "Email Intent Classification",
    model: "GPT-4",
    framework: "OpenAI API",
  },
  {
    id: "exp-010",
    name: "Classification Confidence Calibration",
    description:
      "Testing system prompts for better confidence calibration in classification",
    status: "pending",
    createdAt: "2024-01-25",
    updatedAt: "2024-01-25",
    metrics: null,
    dataset: "Customer Support Ticket Classification",
    model: "Claude-3",
    framework: "Anthropic API",
  },
  {
    id: "exp-011",
    name: "Binary vs Multi-Class Classification",
    description:
      "Comparing system prompt effectiveness for binary vs multi-class classification",
    status: "completed",
    createdAt: "2024-01-03",
    updatedAt: "2024-01-12",
    metrics: {
      accuracy: 0.88,
      loss: 0.12,
      epochs: 30,
      classificationMetrics: {
        accuracy: 0.88,
        precision: 0.9,
        recall: 0.86,
        f1Score: 0.88,
        specificity: 0.9,
        sensitivity: 0.86,
        auc: 0.91,
        confusionMatrix: {
          truePositives: 430,
          trueNegatives: 450,
          falsePositives: 50,
          falseNegatives: 70,
        },
      },
    },
    dataset: "Performance Benchmark Dataset",
    model: "GPT-4",
    framework: "OpenAI API",
  },
  {
    id: "exp-012",
    name: "Classification Prompt Length Optimization",
    description:
      "Testing optimal system prompt length for classification accuracy",
    status: "running",
    createdAt: "2024-01-16",
    updatedAt: "2024-01-22",
    metrics: {
      accuracy: 0.82,
      loss: 0.18,
      epochs: 35,
      classificationMetrics: {
        accuracy: 0.82,
        precision: 0.84,
        recall: 0.8,
        f1Score: 0.82,
        specificity: 0.84,
        sensitivity: 0.8,
        auc: 0.85,
        confusionMatrix: {
          truePositives: 400,
          trueNegatives: 420,
          falsePositives: 80,
          falseNegatives: 100,
        },
      },
    },
    dataset: "Email Intent Classification",
    model: "GPT-4",
    framework: "OpenAI API",
  },
];
